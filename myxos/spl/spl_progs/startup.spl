// OS Startup code for XOS
load (5, 19);			// Load File Allocation Table
load (6, 20);			// Load Disk Free List

load (7, 1); 			// Load exception handler
load (8, 2);

load (9, 3);			//Load timer handler
load (10, 4);

load (11, 5);			// Load Interrupt routine 1
load (12, 6);

load (13, 7);			// Load Interrupt routine 2
load (14, 8);

load (15, 9);			// Load Interrupt routine 3
load (16, 10);

load (17, 11);			// Load Interrupt routine 4
load (18, 12);

load (19, 13);			// Load Interrupt routine 5
load (20, 14);

load (21, 15);			// Load Interrupt routine 6
load (22, 16);

load (23, 17);			// Load Interrupt routine 7
load (24, 18);

[READY_LIST + 0] = 0; 		// Sets the entry for PID as 0 

load(25,21); 			// Load pages of code from disk to memory
load(26,22); 
load(27,23); 

PTBR = 1024; 			// PTBR = 1024 + (PID x 8) 
PTLR = 4;			// Limit for every process 4

[PTBR + 0] = 25; 	// Physical Page Number for Logical Page 0
[PTBR + 1] = "01"; 	// Not referenced and valid
[PTBR + 2] = 26; 	// 		"			 1
[PTBR + 3] = "01"; 	// 		"
[PTBR + 4] = 27; 	//		"			 2
[PTBR + 5] = "01"; 	// 		"
[PTBR + 6] = 28; 	// 		"			 3
[PTBR + 7] = "01"; 	// 		"

[READY_LIST + 0] = 2;		// Sets the entry for STATE as Running 
SP = 3 * 512; 			
[28 * 512] = 0; 		// Set up the IP value for INIT in the stack 
				// on ireturn, IP is popped from SP 

/////////////////////////////////////////////////////////////////////////////////
//			Implementing Open file
///////////////////////////////////////////////////////////////////////////////////

//	set the entries of the System-Wide Open File Table to invalid	
alias counter S0;			
counter = 0;
while ( counter <  128) do					// 64 entries, each of size 2 words
	[FILE_TABLE + counter + 0] = -1;		// Set FAT Index to -1
	[FILE_TABLE + counter + 1] =  0;		// Set File Open Count to 0
	counter = counter + 2;					// Move to next entry
endwhile;


// set the per-process open file table entries of the INIT process to invalid
counter = 0;
while (counter < 16) do
	[READY_LIST + 15 + counter]     = -1;	// Both the pointer and LSEEK 
	[READY_LIST + 15 + counter + 1] = -1;	// entries are -1
	counter = counter + 2;					
endwhile;

ireturn;